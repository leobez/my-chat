-> REAL TIME CHAT APP
-> SERVER / REST API / FRONTEND PAGE -> NODE, REACT
-> EVENTUALLY JAVA FOR DESKTOP 
-> LOOK AT REDIS 

--/--

TODO: 
    FRONTEND:
    
        -> TEST FRIENDS COMPONENTS WITH LARGE NAMES

        -> FIX: WHEN FRIEND IS DELETED, IF HE IS IN CHAT SCREEN, IT REMAINS, INSTEAD OF UNMOUNTING
        -> MAYBE ADD 'X' TO CLOSE CHAT WITH USER 
        -> ON FRIENDSELECTION COMPONENT: ADD NOTIFICATION WHEN HAS NEW MESSAGES FROM THAT FRIEND
        -> ON MESSAGES COMPONENTS: ADD TIME ITS SENT + IF IT WAS SENT CORRECTLY + USERNAME

        -> BETTER LOADING: 
            : WHEN LOGOUT / WHEN LOGGIN IN / WHEN ENTERING PAGE (ONLY SHOW AFTER MOUNT) 
            : WHEN CHANGING FRIENDS CHAT

        -> ADD FEEDBACK (MAYBE BALLON):
            : WHEN SENDING REQUEST
            : WHEN SENDING MESSAGE
            : WHEN ACCEPTING REQUEST
            : WHEN DENYING REQUEST
            : WHEN DELETING FRIENDS/REQUESTS
            : WHEN LOGIN/LOGOUT/REGISTER

        -> CREATE PROFILE PAGE
            : VIEW INFO / UPDATE INFO / VIEW FRIENDS

        -> PROFILE IMAGES

    BACKEND:

    SERVER:
    -> ONLY BE ABLE TO SEND MESSAGE TO FRIENDS (MESSAGE ROUTES)
    -> ERROR LOGGER
    -> UNIT TESTS (JEST?)
    -> RATE LIMITER
    -> FORGOT PASSWORD
    -> GUEST ACCOUNT

    DONT FORGET:
    -> ENABLE TOKENVALIDATOR AFTER FINISHING TESTING
    -> SANITIZE WS MESSAGES (ABOVE BASIC SOCKET.IO PROTECTION)
    -> END TO END ENCRYPTION
    -> BEING ABLE TO CREATE AND JOIN DIFFERENT ROOMS IN GROUPS

TO KNOW: 

    -> WHEN CODING FRONTEND, TEST WS FEATURES:
        - 'A NEW USER HAS ENTERED GROUP' MESSAGE
        - WHEN A USER GETS HIS ROLE UPDATED
        - WHEN A USER GETS DELETED FROM A FRIENDSHIP
        - WHEN A USER GETS REMOVED FROM A GROUP